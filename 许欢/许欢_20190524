# Linux下的帮助命令

####  1.1内建命令与外部命令

> **内建命令**实际上是 shell 程序的一部分，其中包含的是一些比较简单的 Linux 系统命令，这些命令是写在bash源码的builtins里面的，由 shell 程序识别并在 shell 程序内部完成运行，通常在 Linux 系统加载运行时 shell 就被加载并驻留在系统内存中。而且解析内部命令 shell 不需要创建子进程，因此其执行速度比外部命令快。比如：history、cd、exit 等等。
>
>  **外部命令**是 Linux 系统中的实用程序部分，因为实用程序的功能通常都比较强大，所以其包含的程序量也会很大，在系统加载时并不随系统一起被加载到内存中，而是在需要时才将其调入内存。虽然其不包含在 shell 中，但是其命令执行过程是由 shell 程序控制的。外部命令是在 Bash 之外额外安装的，通常放在/bin，/usr/bin，/sbin，/usr/sbin等等。比如：ls、vi等。 

使用　type 命令来区分命令是内建的还是外部的。 

```
#得到这样的结果说明是内建命令
xxx is a shell builtin
#得到这样的结果说明是外部命令
xxx is /usr/bin/xxx
#若是得到alias的结果，说明该指令为命令别名所设定的名称；
xxx is an alias for xx --xxx
```

#### 1.2帮助命令

**help**： help 命令是用于显示 shell 内建命令的简要帮助信息。帮助信息中显示有该命令的简要说明以及一些参数的使用以及说明。外部命令基本上都有一个参数--help,这样就可以得到相应的帮助

**man**:man没有内建与外部命令的区分，因为 man 工具是显示系统手册页中的内容, man 也可以得到程序的更多相关信息和 Linux 的更多特性。

**info:**info 来自自由软件基金会的 GNU 项目，是 GNU 的超文本帮助系统，能够更完整的显示出 GNU 信息。 

# Linux任务计划crontab

#### 2.1crontab 

该从输入设备读取指令，并将其存放于 crontab 文件中，以供之后读取和执行。crontab 储存的指令被crond激活，crond 为其守护进程，crond 常常在后台运行，每一分钟会检查一次是否有预定的作业需要执行。

通过 crontab 命令，我们可以在固定的间隔时间执行指定的系统指令或 shell　script 脚本。时间间隔的单位可以是分钟、小时、日、月、周的任意组合。

#### 2.2crontab 准备

- 启动 rsyslog (<!--实验环境中需要手动启动，而在自己本地中 Ubuntu 会默认自行启动不需要手动启动 -->)

```
sudo apt-get install -y rsyslog
sudo service rsyslog start
```

- 启动 crontab 

  ```
  sudo cron －f &
  ```

#### 2.3使用crontab

- 添加一个计划任务 

```
crontab -e
```

分 时 日 月 星期 要运行的命令 

- 查看我们添加了哪些任务 

  ```
  crontab -l 
  ```

- 确定我们的 cron 是否成功的在后台启动 

  ```
  ps aux | grep cron
  
  or
  
  pgrep cron
  ```

- 查看到执行任务命令之后在日志中的信息反馈 

  ```
  sudo tail -f /var/log/syslog
  ```

- 删除任务 

  ```
  crontab -r
  ```

## 挑战

1. 为 `shiyanlou` 用户添加计划任务
2. 每天凌晨 3 点的时候定时备份 `alternatives.log` 到 `/home/shiyanlou/tmp/` 目录
3. 命名格式为 `年-月-日`，比如今天是2017年4月1日，那么文件名为 `2017-04-01`

# 命令执行顺序控制与管道

#### 3.1执行多条命令

简单的顺序执行使用`;`来完成 .

`&&`就是用来实现选择性执行的，它表示如果前面的命令执行结果（不是表示终端输出的内容，而是表示命令执行状态的结果）返回0则执行后面的，否则不执行 。

`||`在这里就是与`&&`相反的控制效果，当上一条命令执行结果为≠0($?≠0)时则执行它后面的命令 

#### 3.2 管道指令

- ### cut 命令，打印每一行的某一字段

  ```
  # 前五个（包含第五个）
  $ cut /etc/passwd -c -5
  # 前五个之后的（包含第五个）
  $ cut /etc/passwd -c 5-
  # 第五个
  $ cut /etc/passwd -c 5
  # 2到5之间的（包含第五个）
  $ cut /etc/passwd -c 2-5
  ```

- ### grep 命令，在文本中或 stdin 中查找匹配字符串

  ```
  grep [命令选项]... 用于匹配的表达式 [文件]...
  ```

  `-r` 参数表示递归搜索子目录中的文件

  `-n`表示打印匹配项行号

  `-I`表示忽略二进制文件。 

- wc 命令用于统计并输出一个文件中行、单词和字节的数目 

- ### sort 排序命令,将输入按照一定方式排序，然后再输出 

  `t`参数用于指定字段的分隔符，这里是以":"作为分隔符；

  `-k 字段号`用于指定对哪一个字段进行排序。 

​       `-r`反转排序

- uniq命令可以用于过滤或者输出重复行。 

   可以使用`history`命令查看最近执行过的命令 。

# 代码截图

https://github.com/inspurcloudgroup/icprd1/blob/master/%E8%AE%B8%E6%AC%A2/0524.docx

